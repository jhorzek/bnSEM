% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cov_to_phantom.R
\name{cov_to_phantom_refit_loadings}
\alias{cov_to_phantom_refit_loadings}
\title{cov_to_phantom_refit_loadings}
\usage{
cov_to_phantom_refit_loadings(parameter_table, mx_model, optimize)
}
\arguments{
\item{parameter_table}{parameter table of an OpenMx model (see ?OpenMx::omxLocateParameters)}

\item{mx_model}{fitted OpenMx model}

\item{optimize}{should the substitute model in case of covariances be optimized?}
}
\value{
fitted mx_model with phantom variables
}
\description{
In Bayesian networks, all dependencies between variables must be expressed with
directed "effects". There is no covariance in the same sense as in OpenMx.
Instead, we must replace covariances with effects of a latent phantom variable.
For instance x1 <-> x2 is replaced with ph -> y1; ph -> y2; ph <-> ph. The
resulting model is identical to the initial OpenMx model in terms of fit, but the residual
variance estimates will change. For the current implementation, the loadings of the
phantom on the observed variables is (1) constraint to equality if the covariance
is positive and (2) constraint to have equal values, but opposite signs for covariances
that are negative. The variance is constraint to one. This is based on a discussion
with Prof. Marcel Paulssen for a bifactor modeling approach.
}
\keyword{internal}
